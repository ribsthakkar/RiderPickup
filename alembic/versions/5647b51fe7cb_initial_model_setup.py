"""Initial model setup

Revision ID: 5647b51fe7cb
Revises: 
Create Date: 2020-08-13 14:55:04.220697

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5647b51fe7cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('drivers', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('driver_ids', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('trips', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('times', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('earliest_picks', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('latest_drops', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('miles', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('revenues', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('location_lats', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('location_lons', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('location_labels', postgresql.ARRAY(sa.String()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('level_of_service', sa.String(), nullable=False),
    sa.Column('alternate_early_day', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merge_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('window', sa.Interval(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('revenue_rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lower_mileage_bound', sa.Float(), nullable=False),
    sa.Column('upper_mileage_bound', sa.Float(), nullable=False),
    sa.Column('level_of_service', sa.String(), nullable=False),
    sa.Column('base_rate', sa.Float(), nullable=False),
    sa.Column('revenue_per_mile', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driver_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('lats', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('lons', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('trip_ids', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('trip_pu', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('trip_do', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('trip_est_pu', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('trip_sch_pu', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('trip_est_do', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('trip_sch_do', postgresql.ARRAY(sa.Interval()), nullable=True),
    sa.Column('trip_miles', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('trip_los', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('trip_rev', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('driver_assignment')
    op.drop_table('revenue_rate')
    op.drop_table('merge_address')
    op.drop_table('driver')
    op.drop_table('assignment')
    # ### end Alembic commands ###
